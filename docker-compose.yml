# Docker Compose for Full Stack Seguros Bol√≠var Chat

version: '3.8'

services:
  # Backend API Service
  api:
    build:
      context: ./insurance_agent_api
      dockerfile: Dockerfile
    container_name: seguros-api
    ports:
      - "8000:8000"
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Next.js Service
  frontend:
    build:
      context: ./Cursor/app
      dockerfile: Dockerfile
    container_name: seguros-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://api:8000
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  default:
    name: seguros-network

